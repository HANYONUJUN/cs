스크립트 언어와 컴파일 언어의 차이
  1.인터프리터 언어: 코드가 실행되는 단계인 런타임에 문 단위 한 줄씩 중간 코드인 바이트코드로 변환한 후 실행
    - 인터프리트 과정이 반복 수행
    - 인터프리트 단계와 실행 단계가 분리되어있지 않다
    - 한 줄씩 바이트코드로 변환하고 즉시 실행한다
    - 실행 파일을 생성하지 않는다

  2.컴파일러 언어: 코드가 실행되기 전 단계인 컴파일 타임에 소스코드 전체를 한번에 머신 코드로 변환후 실행
    - 실행 파일을 생성한다.
    - 최적화 작업을 진행하고 실행파일을 생성하기때문에 코드 실행 속도가 인터프리터보다 빠름
    - 실행에 아펏 컴파일은 단 한번만 수행

동기와 비동기의 장단점
  1.동기: 구성이 단순하고 순서대로 실행가능해서 예측이 가능
  2.비동기: 동시에 여러일을 수행할 수 있음

데이터베이스에서 인덱스를 사용하는 이유와 장단점
 - 인덱스는 데이터를 논리적으로 정렬해서 검색과 정렬 속도를 높이기 위해 사용
 - 데이터 삽입, 변경이 수시로 일어나면 매번 인덱스를 변경해야하므로 성능 저하를 막기 위한 고려가 필요
 - 그래서 react에서 key는 인덱스로 지정하면 안되는 경우가 더 많음(주로 유일한 값을 key에 지정해줌) -> 인덱스는 변화가 발생할 경우가 많기 때문
