객체 지향 프로그래밍의 장, 단점
장점
1. 코드 재사용성이 용이하다
  - 남이 만든 클래스를 가져와서 이용할 수 있고 상속을 통해 확장해서 사용가능
2. 유지보수가 쉬움
  - 절차 지향 프로그래밍에서는 코드를 수정해야 할 때 일일이 찾아 수정해야하는 반면 객체 지향 프로그래밍에서는 수정해야
    할 부분이 클래스 내부에 변수 혹은 메서드로 있기 때문에 해당 부분만 수정하면된다.
3. 대형 프로젝트에 적함
  - 클래스 단위로 모듈화시켜서 개발 할 수 있으므로 대형 프로젝트처럼 여러명, 여러회사에서 개발이 필요할 시 업무 분담하기
    쉬움

단점
  - 처리속도가 상대적으로 느림
  - 객체가 많으면 용량이 커질 수 있음
  - 설계시 많은 시간과 노력이 필요

java의 장,단점
장점
-JVM 위에서 동작하기 때문에 운영체제에 독립적임
- 가비지컬렉터가 메모리를 관리해주기 때문에 편리

단점
- JVM 위에서 동작하기 때문에 실행 속도가 상대적으로 느림
- 다중 상속이나 타입에 엄격하는 등 제약이 있는 것이 많음

클래스와 인스턴스는 무엇인가
클래스 - 어떤 문제를 해결하기 위한 데이터를 만들기 위해 추상화를 거쳐 집단에 속하는 속성과 행위를 변수와 메서드로 정의한 것

객체(Object) - 클래스를 기반으로 선언된 대상

인스턴스 - 클래스에서 정의한 것을 토대로 실제 메모리상에 할당된 것으로 실제 프로그램에서 사용되는 데이터


